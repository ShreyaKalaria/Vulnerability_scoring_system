# -*- coding: utf-8 -*-
"""
Created on Sat Aug  6 10:03:52 2022

@author: IIT
"""

#%% dict or list parser
# excludeList = ['problemtype']
data = {}
def insertKeyValue(key,fromData):
    global data

    if(key in data.keys()):
        data[key] = data[key] +"#arman#"+ str(fromData)
    else:
        data[key] = str(fromData)


def aggregate2(indexKey,json,flag):
    global data
    if(flag==0):
        data = {}
    if(type(json) is dict):
        for key in json.keys():
            # if(key in excludeList):
            #     continue
            if(type(json[key]) is not dict and type(json[key]) is not list):
                insertKeyValue(key,json[key])
            else:
                aggregate2(key,json[key],1)

    elif(type(json) is list):
        for item in json:
            if(type(item) is not list and type(item) is not dict):
                insertKeyValue(indexKey,item)
            else:
                aggregate2(indexKey,item,1)
                
#%% import library section
import pandas as pd
df = pd.read_json('../data/nvdcve-1.1-2019.json')  

#%% iterating all cveItem, parsing them and added to mainData list
mainData = []
cve = df['CVE_Items']
for index in range(len(cve)):
    aggregate2('dump',cve[index],0)
    mainData.append( )
mainData

#%% converting list of dict to csv [list2dataFm]
df2 = pd.DataFrame()
df2

length = len(mainData)

index=0
for item in mainData:
    for key in item:
        if key not in df2.columns:
            df2[key] = [None]*length
        df2[key][index] = item[key]
        
    index+=1
df2

#%% renaming columns
df2.rename(columns = {'accessVector':'attackVector_v2',
                      'accessComplexity':'attackComplexity_v2',
                      'authentication':'privilegesRequired_v2',
                      'severity':'baseSeverity_v2',
                      'value':'description'
                      
                      }, inplace = True)


#%% column spliting
columns = ['description','vectorString','confidentialityImpact','integrityImpact','availabilityImpact','baseScore',
           'exploitabilityScore','impactScore']
df3 = df2
for col in df2.columns:
    if col not in columns:
        continue
    # print(col)
    if col == 'description':
        newCol = 'weaknessType'
        df2[newCol] = [None]*len(df2[col])
        index = 0
        for value in df2[col]:
            if value == None:
                df2[col][index] = None
                index+=1
                continue
            valueLst = value.split('#arman#')
            if len(valueLst)==2:
                df2[col][index] = valueLst[1]
                df2[newCol][index] = valueLst[0]
            elif len(valueLst)==1:
                df2[col][index] = valueLst[0]
            elif len(valueLst)>2:
                df2[col][index] = valueLst[-1]
                df2[newCol][index] = valueLst[0]
            index+=1
        continue
        
    newCol = col+"_v2"
    df2[newCol] = [None]*len(df2[col])
    index = 0
    for value in df2[col]:
        if value == None:
            df2[col][index] = None
            index+=1
            continue
        valueLst = value.split('#arman#')
        if len(valueLst)==2:
            df2[col][index] = valueLst[0]
            df2[newCol][index] = valueLst[1]
        elif len(valueLst)==1:
            df2[col][index] = valueLst[0]
        elif len(valueLst)>2:
            df2[col][index] = valueLst[0]
            df2[newCol][index] = valueLst[1]
        index+=1

#%% write as csv
df2.to_csv('../data/output/nvdcve-1.1-2019.csv',index=False)


















                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                