# -*- coding: utf-8 -*-
"""
Created on Fri Aug 19 15:31:01 2022

@author: Arman
"""

import pandas as pd

def perse_cpe(datafm): # assumin cveId as index
    vendors = {}
    for id in datafm.index:
        # print(id)
        # print(datafm[id])
        if(not isinstance(datafm[id],str)):
            continue
        cpe_lst = datafm[id].split('#arman#')
        tempVendors = {}
        for a_cpe in cpe_lst:
            a_cpe_sp = a_cpe.split(':')
            tvendor = a_cpe_sp[3]
            product = a_cpe_sp[4]
            version = a_cpe_sp[5]
            if tvendor not in tempVendors.keys():
                tempVendors[tvendor] = {"ID":id}
            if product not in tempVendors[tvendor].keys():
                tempVendors[tvendor][product] = [version]
            elif version not in tempVendors[tvendor][product]:
                tempVendors[tvendor][product].append(version)
        # print(tempVendors)
        for prod in tempVendors.keys():
            if prod not in vendors.keys():
                vendors[prod] = pd.DataFrame()
            
            for key in tempVendors[prod]:
                if key!="ID":
                    # print(prod)
                    # tempVendors[prod][key+"_len"] = len(tempVendors[prod][key])
                    tempVendors[prod][key] = ",".join(tempVendors[prod][key])
            vendors[prod] = vendors[prod].append(tempVendors[prod],ignore_index = True)
    return vendors

def sort_by_vend(df): # here df will be a touple consist of (vendor, value)
    return len(df[1])*-1

def sort_by_pord(df):
    return len(df[1])/df[1].size * -1 # -1 is for descending ordering

def sort_dict_df(dict_df,srt_fn):
    sorted_dict = {}
    for key, value in sorted(dict_df.items(), key=srt_fn):
        sorted_dict[key] = value
    return sorted_dict


if False:
    
    data = pd.read_csv('../data/output/all_nvd.csv',index_col="ID")
    vendors_inf2 = perse_cpe(data["cpe23Uri"])
    
# sorting
    sort_data = sort_dict_df(vedors_pickle, sort_by_vend)
    key = list(sort_data.keys())
    print(sort_data[key[17819]])
    
    
#%% data saving
if False:
    
    import pickle
    
    # with open('all_data.pickle', 'wb') as f:
    #     pickle.dump(vendors_inf2, f)
        
    vedors_pickle = {}
    with open('../data/output/all_data.pickle', 'rb') as f:
        vedors_pickle = pickle.load(f)
        
        





