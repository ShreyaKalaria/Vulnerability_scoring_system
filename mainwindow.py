# -*- coding: utf-8 -*-
"""
Created on Fri Nov 25 11:27:39 2022

@author: md arman hossain
!python mainwindow.py
"""

import sys

from PyQt5.QtWidgets import (
    QApplication, QDialog,QWidget, QMainWindow, QMessageBox,
)
from PyQt5.uic import loadUi

from graph import Window as GraphView
from nvd_downloader import updatedata
from merging_16_22_databases import merge_all
from data_files_generator import generate
from epss_dataset_generator import dataforexcel
from cvss_calculator import Cvss_calc


class Excel(QMainWindow):
    def __init__(self, parent=None):
        super().__init__(parent)
        loadUi("mainwindow.ui", self)
        self.initvar()
        self.connect()
        
    def initvar(self):
        self.graphview = GraphView()
        
    def connect(self):
        self.actionGraphical.triggered.connect(self.actiongraphicaltriggered)
        self.actionCVSS.triggered.connect(self.actioncvsstriggered)
        self.actionExport.triggered.connect(self.actionexportfiletriggered)
        self.actionCheck_for_update.triggered.connect(self.update_data)
        self.actionExport.triggered.connect(self.exportData)
        
    def actiongraphicaltriggered(self):
        self.graphview.show()
        
    def actioncvsstriggered(self):
        win = Cvss_calc()
        win.show()
        
    
    def actionexportfiletriggered(self):
        pass
    def exportData():
        pass
    
    def update_data(self):
        affected_years = updatedata()
        data = merge_all('./downloaded',2002,2050) # affected year should be used and merging with original database inorder to reduce time
        data.to_csv('./downloaded/2002_22_nvd.csv',index=False)
        generate("") # files will be generate for graph view
        dataforexcel() # excel view data
        
if __name__ == "__main__":
    app = QApplication(sys.argv)
    win = Excel()
    win.show()
    sys.exit(app.exec())