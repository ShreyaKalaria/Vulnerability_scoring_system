# -*- coding: utf-8 -*-
"""
Created on Sat Aug 13 05:13:54 2022

@author: IIT
"""

# ! pip install pyexploitdb

import pandas as pd


def perse_vendor(cpe_series):
    lst = cpe_series.values.tolist()
    # vendor_lst1 = ['microsoft','adobe','ibm','hp','apache','apple','linux','oracle','opensuse','cisco','huawei','canonical','redhat','debian']
    vendor_lst = ['microsoft','adobe','ibm','hp','apache','apple','google']
    df = pd.DataFrame()
    for vendor in vendor_lst:
        df[vendor] = [0]*len(cpe_series)
    
    index = 0
    for item in lst:
        if(not isinstance(item, str)):
            index+=1
            continue
        cpe_lst = item.split('#arman#')
        
        for a_cpe in cpe_lst:
            a_cpe_sp = a_cpe.split(':')
            
            vendor= a_cpe_sp[3]
            
            if vendor in vendor_lst:
                df[vendor][index] = 1
        index+=1
    
    return df
    

def count_ref(ref_source):
    
    lst = ref_source.values.tolist()
    df = pd.DataFrame()
    df['ref_count'] = [0]*len(ref_source)
    
    index = 0
    for item in lst:
        if(not isinstance(item, str)): # if None
            index+=1
            continue
        refcnt = len(item.split('#arman#'))
        
        df['ref_count'][index] = refcnt
        index+=1
    
    return df
    

# def exploit():
#     expltlst = ['poc_code','weaponized']
#     return 0

def tags_poc_from_exploit_db(cve_id_series):
    from pyExploitDb import PyExploitDb
    
    taglst = ['remote','dos','webapps','local'] # 'code_execution','memory_corruption' not in exploitdb
    pEdb = PyExploitDb()
    pEdb.debug = False
    pEdb.openFile()
    
    df = pd.DataFrame()
    for tag in taglst:
        df[tag] = [0]*len(cve_id_series)
        
    df['poc_code'] = [0]*len(cve_id_series) 
    
    index = 0
    for id in cve_id_series:    
        results = pEdb.searchCve(id)
        if (results==[]):
            index+=1
            continue
        else:
            df['poc_code'][index] = 1
            if(results['platform'] in taglst):
                df[results['platform']][index] = 1
                
            
        index+=1
        
        
    return df
        
def add_columns_to_df(orginal_df,add_df):
    for col in add_df:
        orginal_df[col] = add_df[col]
    return orginal_df
    
def generate(data):
        
    vendf = perse_vendor(data['cpe23Uri'])
    
    ref_cnt_df = count_ref(data['refsource'])
    
    tag_poc_df = tags_poc_from_exploit_db(data['ID'])
    
    total_df = pd.DataFrame()
    total_df['ID'] = data['ID']
    
    total_df = add_columns_to_df(total_df, vendf)
    total_df = add_columns_to_df(total_df, ref_cnt_df)
    total_df = add_columns_to_df(total_df, tag_poc_df)
    return total_df
    
if __name__ == "__main__":
    data = pd.read_csv('../data/output/all_data_2019.csv')
    data = generate(data)