# -*- coding: utf-8 -*-
"""
Created on Thu Oct 27 18:44:00 2022

@author: arman hossain

!pip install gensim==3.8.3
!python year_vs_count_line.py
"""


from PyQt5.QtWidgets import QApplication, QMainWindow, QWidget
import sys
from PyQt5.QtChart import QChart, QChartView, QLineSeries, QSplineSeries
from PyQt5.QtCore import QPointF
from PyQt5.QtGui import QPainter
from PyQt5.QtCore import Qt
import pickle

class Window(QMainWindow):
    def __init__(self):
        super().__init__()

        self.setWindowTitle("PyQtChart Line")
        # self.setGeometry(100,100, 680,500)
        self.read_data("./data/year_vs_cnt.pickle")
        self.show()

        self.create_linechart()

    def read_data(self,filename):
        with open(filename, 'rb') as file:
            obj = pickle.load(file)
        self.data = obj
        
    def info(self,obj):
        for attr in dir(obj):
            print(attr,"(",type(getattr(obj,attr)).__name__,")")
    def create_linechart(self):
        
        series = QSplineSeries()
        for key in self.data.keys():
            series.append(key,self.data[key])
        series.setName("years_vs_cnt")
        
        chart =  QChart()

        chart.addSeries(series)
        chart.createDefaultAxes()
        chart.setAnimationOptions(QChart.SeriesAnimations)
        chart.setTitle("Line Chart Example")

        chart.legend().setVisible(True)
        chart.legend().setAlignment(Qt.AlignBottom)


        chartview = QChartView(chart)
        chartview.setRenderHint(QPainter.Antialiasing)

        self.setCentralWidget(chartview)


if __name__ == "__main__":
    App = QApplication(sys.argv)
    window = Window()
    sys.exit(App.exec_())
