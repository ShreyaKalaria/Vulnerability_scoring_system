# -*- coding: utf-8 -*-
"""
Created on Mon Sep 12 16:13:57 2022

@author: arman hossain
"""

import sys

from PyQt5.QtWidgets import (
    QApplication, QDialog, QTableWidget,QWidget, QMainWindow, QMessageBox, QGroupBox, QLabel,
    QTableWidgetItem
)
import pandas as pd
from PyQt5.uic import loadUi
from info_widget import Info_widget

class Table(QTableWidget):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.info = Info_widget()
        self.connect()
        self.data = pd.read_csv('./data/data_for_excel.csv')
        self.item_per_page = 30
  
    def goto_page(self,page_number):
        self.current_page = page_number
        startIdx = (page_number-1)*self.item_per_page
        self.setRowCount(0)
        self.setRowCount(self.item_per_page)
        
     
        for row in range(startIdx,startIdx+self.item_per_page):
            # print(self.rowCount()+1)
            self.insertRow(self.rowCount()+1)
            col = 0
            for column in ["ID",'description','CVSS_v2','CVSS_v31','epss','publishedDate']:
                if row < len(self.data):
                    # print(str(self.data[column][row]))
                    if column == "epss":
                        self.setItem(row-startIdx, col, QTableWidgetItem(str(self.data[column][row])))
                    else:
                        self.setItem(row-startIdx, col, QTableWidgetItem(str(self.data[column][row])))
                    
                col+=1
        
    def goto_page_pre(self):
        if self.current_page-1 >0:
            self.goto_page(self.current_page-1)
            
    def goto_page_next(self):
        if self.current_page+1 < len(self.data):
            self.goto_page(self.current_page+1)
            
    def connect(self):
        self.itemDoubleClicked.connect(self.item_double_clicked)
        # self.itemPressed.connect(self.item_double_clicked)
        
    def item_double_clicked(self,item):
        # print("--------------",self.data.iloc[item.row()]['ID'])
        idd = self.item(item.row(),0).data(0)
        self.r = item
        startIdx = (self.current_page-1)*self.item_per_page
        position = 0
        for row in range(startIdx,startIdx+self.item_per_page):
            if row < len(self.data):
                if self.data['ID'][row] == idd: position = row
                
        self.info.setdata(self.data.iloc[position])
        self.info.show()
        # print(idd)

if __name__ == "__main__":
    app = QApplication(sys.argv)
    win = Table()
    win.show()
    sys.exit(app.exec())

