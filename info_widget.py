# -*- coding: utf-8 -*-
"""
Created on Mon Sep 12 20:15:44 2022

@author: arman hossain
"""

import sys

from PyQt5.QtWidgets import (
    QApplication, QDialog, QTableWidget,QWidget, QMainWindow, QMessageBox, QGroupBox, QLabel,
    QTableWidgetItem
)
from PyQt5.uic import loadUi



class Info_widget(QWidget):
    def __init__(self, parent=None):
        super().__init__(parent)
        loadUi("info.ui", self) # this ui file is a widget so it can be placed within qmainwindow
        # qdialog cannot be load on qmainwindow file
        self.setWindowTitle("Detail View")
        self.maping = {
        'AV':{
            'N':'NETWORK',
            'A':'ADJACENT_NETWORK',
            'L':'LOCAL',
            'P':'PHYSICAL'
            },
        'AC':{
            'L':'LOW',
            'H':'HIGH'
            },
        'PR':{
            'N':'NONE',
            'L':'LOW',
            'H':'HIGH'
            },
        'UI':{
            'N':'NONE',
            'R':'REQUIRED'
            },
        'C':{
            'N':'NONE',
            'H':'HIGH',
            'L':'LOW'
            },
        'I':{
            'N':'NONE',
            'H':'HIGH',
            'L':'LOW'
            },
        'A':{
            'N':'NONE',
            'H':'HIGH',
            'L':'LOW'
            },
        'S':{
            'C':'CHANGED',
            'U':'UNCHANGED'
            }
        }

        
    def ven_prod(self,item):
        # item = data.cpeUri
        if(not isinstance(item, str)):
            return ("","")
        cpe_lst = item.split('#arman#')
        vendors = []
        prods = []
        for a_cpe in cpe_lst:
            a_cpe_sp = a_cpe.split(':')
            vendor= a_cpe_sp[3]
            prod = vendor+"_"+a_cpe_sp[4]
            if vendor not in vendors:
                vendors.append(vendor)
            
            if prod not in prods:
                prods.append(prod)
        return (",".join(vendors),",".join(prods))
        
    def setdata(self,data):
        # print(data)
        if type(data.vectorString_v31) != float:
            met = data.vectorString_v31.split("/")
            # print(met)
            self.ac.setText(self.maping[met[2].split(":")[0]][met[2].split(":")[1]])
            
            self.au.setText(self.maping[met[4].split(":")[0]][met[4].split(":")[1]]) #pr
            self.av.setText(self.maping[met[1].split(":")[0]][met[1].split(":")[1]]) 
            self.pr.setText(self.maping[met[3].split(":")[0]][met[3].split(":")[1]])
            self.ci.setText(self.maping[met[6].split(":")[0]][met[6].split(":")[1]])
            self.scope.setText(self.maping[met[5].split(":")[0]][met[5].split(":")[1]])
            # '''
            self.ii.setText(self.maping[met[7].split(":")[0]][met[7].split(":")[1]])
            
            self.ai.setText(self.maping[met[8].split(":")[0]][met[8].split(":")[1]])
            
        self.id.setText(str(data.ID))
        
        vend,prod = self.ven_prod(data.cpeUri)
        
        self.vendors.setText(vend)
        self.products.setText(prod)
        
        self.date.setText(str(data.publishedDate))
        if type(data.tags) != float:
            self.tags.setText(",".join(data.tags.split("#arman#")))
        # self.codelinks.setText(str(data.code_link))
        self.codelinks.setText('http://exploit-db.com/exploits/54')
        if type(data.url) != float:
            self.ref_links.setText(",".join(data.url.split("#arman#")))
        # self.ref_source.setText(str(data.))
        
        self.desc.setText(data.description)
        
        self.barchart_frame.update_chart([data.CVSS_v2,data.CVSS_v31,data.epss])
        # '''
        
        
       