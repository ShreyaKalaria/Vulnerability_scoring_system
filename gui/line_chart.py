# -*- coding: utf-8 -*-
"""
Created on Tue Sep 27 18:41:29 2022

@author: IIT

!pip install gensim==3.8.3

!python line_chart.py
"""

from PyQt5.QtWidgets import QApplication, QMainWindow
import sys
from PyQt5.QtChart import QChart, QChartView, QLineSeries, QSplineSeries
from PyQt5.QtCore import QPointF
from PyQt5.QtGui import QPainter
from PyQt5.QtCore import Qt


class Window(QMainWindow):
    def __init__(self):
        super().__init__()

        self.setWindowTitle("PyQtChart Line")
        self.setGeometry(100,100, 680,500)

        self.show()

        self.create_linechart()


    def info(self,obj):
        for attr in dir(obj):
            print(attr,"(",type(getattr(obj,attr)).__name__,")")
    def create_linechart(self):

        series = QSplineSeries()
        # series = QLineSeries(self)
        series.append(2001,3000)
        series.append(2002, 50)
        series.append(2003, 1000)
        series.append(2004, 1100)
        series.append(2005, 4000)
        series.append(2007, 1700)
        series.append(2008, 1500)
        series.append(2009, 2550)
        series.append(2010, 2671)
        series.append(2011, 8347)
        series.append(2012, 2325)
        series.append(2013, 1521)
        series.append(2014, 1325)
        series.append(2015, 1421)
        series.append(2016, 4323)
        series.append(2017, 1423)
        series.append(2018, 554)
        series.append(2019, 2415)
        series.append(2020, 324)
        series.append(2021, 1324)
        series.append(2022, 4321)
        series.setName("graph_1")
        # self.info(series)
        # series << QPointF(11, 1) << QPointF(13, 3) << QPointF(17, 6) << QPointF(18, 3) << QPointF(20, 2)
        series1 = QSplineSeries()
        # series = QLineSeries(self)
        series1.append(2001,50)
        series1.append(2002, 3000)
        series1.append(2003, 100)
        series1.append(2004, 3100)
        series1.append(2005, 4100)
        series1.append(2007, 1900)
        series1.append(2008, 1520)
        series1.append(2009, 2510)
        series1.append(2010, 2831)
        series1.append(2011, 8637)
        series1.append(2012, 2835)
        series1.append(2013, 1251)
        series1.append(2014, 1645)
        series1.append(2015, 1131)
        series1.append(2016, 4363)
        series1.append(2017, 1373)
        series1.append(2018, 5542)
        series1.append(2019, 2385)
        series1.append(2020, 3241)
        series1.append(2021, 1834)
        series1.append(2022, 4121)
        series1.setName("graph_2")
        chart =  QChart()

        chart.addSeries(series)
        chart.addSeries(series1)
        chart.createDefaultAxes()
        chart.setAnimationOptions(QChart.SeriesAnimations)
        chart.setTitle("Line Chart Example")

        chart.legend().setVisible(True)
        chart.legend().setAlignment(Qt.AlignBottom)


        chartview = QChartView(chart)
        chartview.setRenderHint(QPainter.Antialiasing)

        self.setCentralWidget(chartview)



App = QApplication(sys.argv)
window = Window()
sys.exit(App.exec_())

# from random import random, uniform

# def generate_random_data(list_count, value_max, value_count):
#         data_table = []
#         for i in range(list_count):
#             data_list = []
#             y_value = 0
#             for j in range(value_count):
#                 constant = value_max / float(value_count)
#                 y_value += uniform(0, constant)
#                 x_value = (j + random()) * constant
#                 value = QPointF(x_value, y_value)
#                 label = f"Slice {i}: {j}"
#                 data_list.append((value, label))
#             data_table.append(data_list)

#         return data_table


# list_count = 3
# value_max = 10
# value_count = 7
# data_table = generate_random_data(list_count,value_max, value_count)

# print(data_table)

